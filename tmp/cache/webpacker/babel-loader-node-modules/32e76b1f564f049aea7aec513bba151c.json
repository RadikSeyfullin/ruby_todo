{"ast":null,"code":"/*!\n * iCheck v1.0.2, http://git.io/arlzeA\n * ===================================\n * Powerful jQuery and Zepto plugin for checkboxes and radio buttons customization\n *\n * (c) 2013 Damir Sultanov, http://fronteed.com\n * MIT Licensed\n */\n(function ($) {\n  // Cached vars\n  var _iCheck = 'iCheck',\n      _iCheckHelper = _iCheck + '-helper',\n      _checkbox = 'checkbox',\n      _radio = 'radio',\n      _checked = 'checked',\n      _unchecked = 'un' + _checked,\n      _disabled = 'disabled',\n      _determinate = 'determinate',\n      _indeterminate = 'in' + _determinate,\n      _update = 'update',\n      _type = 'type',\n      _click = 'click',\n      _touch = 'touchbegin.i touchend.i',\n      _add = 'addClass',\n      _remove = 'removeClass',\n      _callback = 'trigger',\n      _label = 'label',\n      _cursor = 'cursor',\n      _mobile = /ipad|iphone|ipod|android|blackberry|windows phone|opera mini|silk/i.test(navigator.userAgent); // Plugin init\n\n\n  $.fn[_iCheck] = function (options, fire) {\n    // Walker\n    var handle = 'input[type=\"' + _checkbox + '\"], input[type=\"' + _radio + '\"]',\n        stack = $(),\n        walker = function walker(object) {\n      object.each(function () {\n        var self = $(this);\n\n        if (self.is(handle)) {\n          stack = stack.add(self);\n        } else {\n          stack = stack.add(self.find(handle));\n        }\n      });\n    }; // Check if we should operate with some method\n\n\n    if (/^(check|uncheck|toggle|indeterminate|determinate|disable|enable|update|destroy)$/i.test(options)) {\n      // Normalize method's name\n      options = options.toLowerCase(); // Find checkboxes and radio buttons\n\n      walker(this);\n      return stack.each(function () {\n        var self = $(this);\n\n        if (options == 'destroy') {\n          tidy(self, 'ifDestroyed');\n        } else {\n          operate(self, true, options);\n        } // Fire method's callback\n\n\n        if ($.isFunction(fire)) {\n          fire();\n        }\n      }); // Customization\n    } else if (typeof options == 'object' || !options) {\n      // Check if any options were passed\n      var settings = $.extend({\n        checkedClass: _checked,\n        disabledClass: _disabled,\n        indeterminateClass: _indeterminate,\n        labelHover: true\n      }, options),\n          selector = settings.handle,\n          hoverClass = settings.hoverClass || 'hover',\n          focusClass = settings.focusClass || 'focus',\n          activeClass = settings.activeClass || 'active',\n          labelHover = !!settings.labelHover,\n          labelHoverClass = settings.labelHoverClass || 'hover',\n          // Setup clickable area\n      area = ('' + settings.increaseArea).replace('%', '') | 0; // Selector limit\n\n      if (selector == _checkbox || selector == _radio) {\n        handle = 'input[type=\"' + selector + '\"]';\n      } // Clickable area limit\n\n\n      if (area < -50) {\n        area = -50;\n      } // Walk around the selector\n\n\n      walker(this);\n      return stack.each(function () {\n        var self = $(this); // If already customized\n\n        tidy(self);\n        var node = this,\n            id = node.id,\n            // Layer styles\n        offset = -area + '%',\n            size = 100 + area * 2 + '%',\n            layer = {\n          position: 'absolute',\n          top: offset,\n          left: offset,\n          display: 'block',\n          width: size,\n          height: size,\n          margin: 0,\n          padding: 0,\n          background: '#fff',\n          border: 0,\n          opacity: 0\n        },\n            // Choose how to hide input\n        hide = _mobile ? {\n          position: 'absolute',\n          visibility: 'hidden'\n        } : area ? layer : {\n          position: 'absolute',\n          opacity: 0\n        },\n            // Get proper class\n        className = node[_type] == _checkbox ? settings.checkboxClass || 'i' + _checkbox : settings.radioClass || 'i' + _radio,\n            // Find assigned labels\n        label = $(_label + '[for=\"' + id + '\"]').add(self.closest(_label)),\n            // Check ARIA option\n        aria = !!settings.aria,\n            // Set ARIA placeholder\n        ariaID = _iCheck + '-' + Math.random().toString(36).substr(2, 6),\n            // Parent & helper\n        parent = '<div class=\"' + className + '\" ' + (aria ? 'role=\"' + node[_type] + '\" ' : ''),\n            helper; // Set ARIA \"labelledby\"\n\n        if (aria) {\n          label.each(function () {\n            parent += 'aria-labelledby=\"';\n\n            if (this.id) {\n              parent += this.id;\n            } else {\n              this.id = ariaID;\n              parent += ariaID;\n            }\n\n            parent += '\"';\n          });\n        } // Wrap input\n\n\n        parent = self.wrap(parent + '/>')[_callback]('ifCreated').parent().append(settings.insert); // Layer addition\n\n        helper = $('<ins class=\"' + _iCheckHelper + '\"/>').css(layer).appendTo(parent); // Finalize customization\n\n        self.data(_iCheck, {\n          o: settings,\n          s: self.attr('style')\n        }).css(hide);\n        !!settings.inheritClass && parent[_add](node.className || '');\n        !!settings.inheritID && id && parent.attr('id', _iCheck + '-' + id);\n        parent.css('position') == 'static' && parent.css('position', 'relative');\n        operate(self, true, _update); // Label events\n\n        if (label.length) {\n          label.on(_click + '.i mouseover.i mouseout.i ' + _touch, function (event) {\n            var type = event[_type],\n                item = $(this); // Do nothing if input is disabled\n\n            if (!node[_disabled]) {\n              // Click\n              if (type == _click) {\n                if ($(event.target).is('a')) {\n                  return;\n                }\n\n                operate(self, false, true); // Hover state\n              } else if (labelHover) {\n                // mouseout|touchend\n                if (/ut|nd/.test(type)) {\n                  parent[_remove](hoverClass);\n\n                  item[_remove](labelHoverClass);\n                } else {\n                  parent[_add](hoverClass);\n\n                  item[_add](labelHoverClass);\n                }\n              }\n\n              if (_mobile) {\n                event.stopPropagation();\n              } else {\n                return false;\n              }\n            }\n          });\n        } // Input events\n\n\n        self.on(_click + '.i focus.i blur.i keyup.i keydown.i keypress.i', function (event) {\n          var type = event[_type],\n              key = event.keyCode; // Click\n\n          if (type == _click) {\n            return false; // Keydown\n          } else if (type == 'keydown' && key == 32) {\n            if (!(node[_type] == _radio && node[_checked])) {\n              if (node[_checked]) {\n                off(self, _checked);\n              } else {\n                on(self, _checked);\n              }\n            }\n\n            return false; // Keyup\n          } else if (type == 'keyup' && node[_type] == _radio) {\n            !node[_checked] && on(self, _checked); // Focus/blur\n          } else if (/us|ur/.test(type)) {\n            parent[type == 'blur' ? _remove : _add](focusClass);\n          }\n        }); // Helper events\n\n        helper.on(_click + ' mousedown mouseup mouseover mouseout ' + _touch, function (event) {\n          var type = event[_type],\n              // mousedown|mouseup\n          toggle = /wn|up/.test(type) ? activeClass : hoverClass; // Do nothing if input is disabled\n\n          if (!node[_disabled]) {\n            // Click\n            if (type == _click) {\n              operate(self, false, true); // Active and hover states\n            } else {\n              // State is on\n              if (/wn|er|in/.test(type)) {\n                // mousedown|mouseover|touchbegin\n                parent[_add](toggle); // State is off\n\n              } else {\n                parent[_remove](toggle + ' ' + activeClass);\n              } // Label hover\n\n\n              if (label.length && labelHover && toggle == hoverClass) {\n                // mouseout|touchend\n                label[/ut|nd/.test(type) ? _remove : _add](labelHoverClass);\n              }\n            }\n\n            if (_mobile) {\n              event.stopPropagation();\n            } else {\n              return false;\n            }\n          }\n        });\n      });\n    } else {\n      return this;\n    }\n  }; // Do something with inputs\n\n\n  function operate(input, direct, method) {\n    var node = input[0],\n        state = /er/.test(method) ? _indeterminate : /bl/.test(method) ? _disabled : _checked,\n        active = method == _update ? {\n      checked: node[_checked],\n      disabled: node[_disabled],\n      indeterminate: input.attr(_indeterminate) == 'true' || input.attr(_determinate) == 'false'\n    } : node[state]; // Check, disable or indeterminate\n\n    if (/^(ch|di|in)/.test(method) && !active) {\n      on(input, state); // Uncheck, enable or determinate\n    } else if (/^(un|en|de)/.test(method) && active) {\n      off(input, state); // Update\n    } else if (method == _update) {\n      // Handle states\n      for (var each in active) {\n        if (active[each]) {\n          on(input, each, true);\n        } else {\n          off(input, each, true);\n        }\n      }\n    } else if (!direct || method == 'toggle') {\n      // Helper or label was clicked\n      if (!direct) {\n        input[_callback]('ifClicked');\n      } // Toggle checked state\n\n\n      if (active) {\n        if (node[_type] !== _radio) {\n          off(input, state);\n        }\n      } else {\n        on(input, state);\n      }\n    }\n  } // Add checked, disabled or indeterminate state\n\n\n  function on(input, state, keep) {\n    var node = input[0],\n        parent = input.parent(),\n        checked = state == _checked,\n        indeterminate = state == _indeterminate,\n        disabled = state == _disabled,\n        callback = indeterminate ? _determinate : checked ? _unchecked : 'enabled',\n        regular = option(input, callback + capitalize(node[_type])),\n        specific = option(input, state + capitalize(node[_type])); // Prevent unnecessary actions\n\n    if (node[state] !== true) {\n      // Toggle assigned radio buttons\n      if (!keep && state == _checked && node[_type] == _radio && node.name) {\n        var form = input.closest('form'),\n            inputs = 'input[name=\"' + node.name + '\"]';\n        inputs = form.length ? form.find(inputs) : $(inputs);\n        inputs.each(function () {\n          if (this !== node && $(this).data(_iCheck)) {\n            off($(this), state);\n          }\n        });\n      } // Indeterminate state\n\n\n      if (indeterminate) {\n        // Add indeterminate state\n        node[state] = true; // Remove checked state\n\n        if (node[_checked]) {\n          off(input, _checked, 'force');\n        } // Checked or disabled state\n\n      } else {\n        // Add checked or disabled state\n        if (!keep) {\n          node[state] = true;\n        } // Remove indeterminate state\n\n\n        if (checked && node[_indeterminate]) {\n          off(input, _indeterminate, false);\n        }\n      } // Trigger callbacks\n\n\n      callbacks(input, checked, state, keep);\n    } // Add proper cursor\n\n\n    if (node[_disabled] && !!option(input, _cursor, true)) {\n      parent.find('.' + _iCheckHelper).css(_cursor, 'default');\n    } // Add state class\n\n\n    parent[_add](specific || option(input, state) || ''); // Set ARIA attribute\n\n\n    if (!!parent.attr('role') && !indeterminate) {\n      parent.attr('aria-' + (disabled ? _disabled : _checked), 'true');\n    } // Remove regular state class\n\n\n    parent[_remove](regular || option(input, callback) || '');\n  } // Remove checked, disabled or indeterminate state\n\n\n  function off(input, state, keep) {\n    var node = input[0],\n        parent = input.parent(),\n        checked = state == _checked,\n        indeterminate = state == _indeterminate,\n        disabled = state == _disabled,\n        callback = indeterminate ? _determinate : checked ? _unchecked : 'enabled',\n        regular = option(input, callback + capitalize(node[_type])),\n        specific = option(input, state + capitalize(node[_type])); // Prevent unnecessary actions\n\n    if (node[state] !== false) {\n      // Toggle state\n      if (indeterminate || !keep || keep == 'force') {\n        node[state] = false;\n      } // Trigger callbacks\n\n\n      callbacks(input, checked, callback, keep);\n    } // Add proper cursor\n\n\n    if (!node[_disabled] && !!option(input, _cursor, true)) {\n      parent.find('.' + _iCheckHelper).css(_cursor, 'pointer');\n    } // Remove state class\n\n\n    parent[_remove](specific || option(input, state) || ''); // Set ARIA attribute\n\n\n    if (!!parent.attr('role') && !indeterminate) {\n      parent.attr('aria-' + (disabled ? _disabled : _checked), 'false');\n    } // Add regular state class\n\n\n    parent[_add](regular || option(input, callback) || '');\n  } // Remove all traces\n\n\n  function tidy(input, callback) {\n    if (input.data(_iCheck)) {\n      // Remove everything except input\n      input.parent().html(input.attr('style', input.data(_iCheck).s || '')); // Callback\n\n      if (callback) {\n        input[_callback](callback);\n      } // Unbind events\n\n\n      input.off('.i').unwrap();\n      $(_label + '[for=\"' + input[0].id + '\"]').add(input.closest(_label)).off('.i');\n    }\n  } // Get some option\n\n\n  function option(input, state, regular) {\n    if (input.data(_iCheck)) {\n      return input.data(_iCheck).o[state + (regular ? '' : 'Class')];\n    }\n  } // Capitalize some string\n\n\n  function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  } // Executable handlers\n\n\n  function callbacks(input, checked, callback, keep) {\n    if (!keep) {\n      if (checked) {\n        input[_callback]('ifToggled');\n      }\n\n      input[_callback]('ifChanged')[_callback]('if' + capitalize(callback));\n    }\n  }\n})(window.jQuery || window.Zepto);","map":{"version":3,"sources":["/Users/radikseyfullin/Desktop/ruby/app/javascript/packs/icheck.js"],"names":["$","_iCheck","_iCheckHelper","_checkbox","_radio","_checked","_unchecked","_disabled","_determinate","_indeterminate","_update","_type","_click","_touch","_add","_remove","_callback","_label","_cursor","_mobile","test","navigator","userAgent","fn","options","fire","handle","stack","walker","object","each","self","is","add","find","toLowerCase","tidy","operate","isFunction","settings","extend","checkedClass","disabledClass","indeterminateClass","labelHover","selector","hoverClass","focusClass","activeClass","labelHoverClass","area","increaseArea","replace","node","id","offset","size","layer","position","top","left","display","width","height","margin","padding","background","border","opacity","hide","visibility","className","checkboxClass","radioClass","label","closest","aria","ariaID","Math","random","toString","substr","parent","helper","wrap","append","insert","css","appendTo","data","o","s","attr","inheritClass","inheritID","length","on","event","type","item","target","stopPropagation","key","keyCode","off","toggle","input","direct","method","state","active","checked","disabled","indeterminate","keep","callback","regular","option","capitalize","specific","name","form","inputs","callbacks","html","unwrap","string","charAt","toUpperCase","slice","window","jQuery","Zepto"],"mappings":"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","sourcesContent":["/*!\n * iCheck v1.0.2, http://git.io/arlzeA\n * ===================================\n * Powerful jQuery and Zepto plugin for checkboxes and radio buttons customization\n *\n * (c) 2013 Damir Sultanov, http://fronteed.com\n * MIT Licensed\n */\n\n(function($) {\n\n  // Cached vars\n  var _iCheck = 'iCheck',\n    _iCheckHelper = _iCheck + '-helper',\n    _checkbox = 'checkbox',\n    _radio = 'radio',\n    _checked = 'checked',\n    _unchecked = 'un' + _checked,\n    _disabled = 'disabled',\n    _determinate = 'determinate',\n    _indeterminate = 'in' + _determinate,\n    _update = 'update',\n    _type = 'type',\n    _click = 'click',\n    _touch = 'touchbegin.i touchend.i',\n    _add = 'addClass',\n    _remove = 'removeClass',\n    _callback = 'trigger',\n    _label = 'label',\n    _cursor = 'cursor',\n    _mobile = /ipad|iphone|ipod|android|blackberry|windows phone|opera mini|silk/i.test(navigator.userAgent);\n\n  // Plugin init\n  $.fn[_iCheck] = function(options, fire) {\n\n    // Walker\n    var handle = 'input[type=\"' + _checkbox + '\"], input[type=\"' + _radio + '\"]',\n      stack = $(),\n      walker = function(object) {\n        object.each(function() {\n          var self = $(this);\n\n          if (self.is(handle)) {\n            stack = stack.add(self);\n          } else {\n            stack = stack.add(self.find(handle));\n          }\n        });\n      };\n\n    // Check if we should operate with some method\n    if (/^(check|uncheck|toggle|indeterminate|determinate|disable|enable|update|destroy)$/i.test(options)) {\n\n      // Normalize method's name\n      options = options.toLowerCase();\n\n      // Find checkboxes and radio buttons\n      walker(this);\n\n      return stack.each(function() {\n        var self = $(this);\n\n        if (options == 'destroy') {\n          tidy(self, 'ifDestroyed');\n        } else {\n          operate(self, true, options);\n        }\n\n        // Fire method's callback\n        if ($.isFunction(fire)) {\n          fire();\n        }\n      });\n\n    // Customization\n    } else if (typeof options == 'object' || !options) {\n\n      // Check if any options were passed\n      var settings = $.extend({\n          checkedClass: _checked,\n          disabledClass: _disabled,\n          indeterminateClass: _indeterminate,\n          labelHover: true\n        }, options),\n\n        selector = settings.handle,\n        hoverClass = settings.hoverClass || 'hover',\n        focusClass = settings.focusClass || 'focus',\n        activeClass = settings.activeClass || 'active',\n        labelHover = !!settings.labelHover,\n        labelHoverClass = settings.labelHoverClass || 'hover',\n\n        // Setup clickable area\n        area = ('' + settings.increaseArea).replace('%', '') | 0;\n\n      // Selector limit\n      if (selector == _checkbox || selector == _radio) {\n        handle = 'input[type=\"' + selector + '\"]';\n      }\n\n      // Clickable area limit\n      if (area < -50) {\n        area = -50;\n      }\n\n      // Walk around the selector\n      walker(this);\n\n      return stack.each(function() {\n        var self = $(this);\n\n        // If already customized\n        tidy(self);\n\n        var node = this,\n          id = node.id,\n\n          // Layer styles\n          offset = -area + '%',\n          size = 100 + (area * 2) + '%',\n          layer = {\n            position: 'absolute',\n            top: offset,\n            left: offset,\n            display: 'block',\n            width: size,\n            height: size,\n            margin: 0,\n            padding: 0,\n            background: '#fff',\n            border: 0,\n            opacity: 0\n          },\n\n          // Choose how to hide input\n          hide = _mobile ? {\n            position: 'absolute',\n            visibility: 'hidden'\n          } : area ? layer : {\n            position: 'absolute',\n            opacity: 0\n          },\n\n          // Get proper class\n          className = node[_type] == _checkbox ? settings.checkboxClass || 'i' + _checkbox : settings.radioClass || 'i' + _radio,\n\n          // Find assigned labels\n          label = $(_label + '[for=\"' + id + '\"]').add(self.closest(_label)),\n\n          // Check ARIA option\n          aria = !!settings.aria,\n\n          // Set ARIA placeholder\n          ariaID = _iCheck + '-' + Math.random().toString(36).substr(2,6),\n\n          // Parent & helper\n          parent = '<div class=\"' + className + '\" ' + (aria ? 'role=\"' + node[_type] + '\" ' : ''),\n          helper;\n\n        // Set ARIA \"labelledby\"\n        if (aria) {\n          label.each(function() {\n            parent += 'aria-labelledby=\"';\n\n            if (this.id) {\n              parent += this.id;\n            } else {\n              this.id = ariaID;\n              parent += ariaID;\n            }\n\n            parent += '\"';\n          });\n        }\n\n        // Wrap input\n        parent = self.wrap(parent + '/>')[_callback]('ifCreated').parent().append(settings.insert);\n\n        // Layer addition\n        helper = $('<ins class=\"' + _iCheckHelper + '\"/>').css(layer).appendTo(parent);\n\n        // Finalize customization\n        self.data(_iCheck, {o: settings, s: self.attr('style')}).css(hide);\n        !!settings.inheritClass && parent[_add](node.className || '');\n        !!settings.inheritID && id && parent.attr('id', _iCheck + '-' + id);\n        parent.css('position') == 'static' && parent.css('position', 'relative');\n        operate(self, true, _update);\n\n        // Label events\n        if (label.length) {\n          label.on(_click + '.i mouseover.i mouseout.i ' + _touch, function(event) {\n            var type = event[_type],\n              item = $(this);\n\n            // Do nothing if input is disabled\n            if (!node[_disabled]) {\n\n              // Click\n              if (type == _click) {\n                if ($(event.target).is('a')) {\n                  return;\n                }\n                operate(self, false, true);\n\n              // Hover state\n              } else if (labelHover) {\n\n                // mouseout|touchend\n                if (/ut|nd/.test(type)) {\n                  parent[_remove](hoverClass);\n                  item[_remove](labelHoverClass);\n                } else {\n                  parent[_add](hoverClass);\n                  item[_add](labelHoverClass);\n                }\n              }\n\n              if (_mobile) {\n                event.stopPropagation();\n              } else {\n                return false;\n              }\n            }\n          });\n        }\n\n        // Input events\n        self.on(_click + '.i focus.i blur.i keyup.i keydown.i keypress.i', function(event) {\n          var type = event[_type],\n            key = event.keyCode;\n\n          // Click\n          if (type == _click) {\n            return false;\n\n          // Keydown\n          } else if (type == 'keydown' && key == 32) {\n            if (!(node[_type] == _radio && node[_checked])) {\n              if (node[_checked]) {\n                off(self, _checked);\n              } else {\n                on(self, _checked);\n              }\n            }\n\n            return false;\n\n          // Keyup\n          } else if (type == 'keyup' && node[_type] == _radio) {\n            !node[_checked] && on(self, _checked);\n\n          // Focus/blur\n          } else if (/us|ur/.test(type)) {\n            parent[type == 'blur' ? _remove : _add](focusClass);\n          }\n        });\n\n        // Helper events\n        helper.on(_click + ' mousedown mouseup mouseover mouseout ' + _touch, function(event) {\n          var type = event[_type],\n\n            // mousedown|mouseup\n            toggle = /wn|up/.test(type) ? activeClass : hoverClass;\n\n          // Do nothing if input is disabled\n          if (!node[_disabled]) {\n\n            // Click\n            if (type == _click) {\n              operate(self, false, true);\n\n            // Active and hover states\n            } else {\n\n              // State is on\n              if (/wn|er|in/.test(type)) {\n\n                // mousedown|mouseover|touchbegin\n                parent[_add](toggle);\n\n              // State is off\n              } else {\n                parent[_remove](toggle + ' ' + activeClass);\n              }\n\n              // Label hover\n              if (label.length && labelHover && toggle == hoverClass) {\n\n                // mouseout|touchend\n                label[/ut|nd/.test(type) ? _remove : _add](labelHoverClass);\n              }\n            }\n\n            if (_mobile) {\n              event.stopPropagation();\n            } else {\n              return false;\n            }\n          }\n        });\n      });\n    } else {\n      return this;\n    }\n  };\n\n  // Do something with inputs\n  function operate(input, direct, method) {\n    var node = input[0],\n      state = /er/.test(method) ? _indeterminate : /bl/.test(method) ? _disabled : _checked,\n      active = method == _update ? {\n        checked: node[_checked],\n        disabled: node[_disabled],\n        indeterminate: input.attr(_indeterminate) == 'true' || input.attr(_determinate) == 'false'\n      } : node[state];\n\n    // Check, disable or indeterminate\n    if (/^(ch|di|in)/.test(method) && !active) {\n      on(input, state);\n\n    // Uncheck, enable or determinate\n    } else if (/^(un|en|de)/.test(method) && active) {\n      off(input, state);\n\n    // Update\n    } else if (method == _update) {\n\n      // Handle states\n      for (var each in active) {\n        if (active[each]) {\n          on(input, each, true);\n        } else {\n          off(input, each, true);\n        }\n      }\n\n    } else if (!direct || method == 'toggle') {\n\n      // Helper or label was clicked\n      if (!direct) {\n        input[_callback]('ifClicked');\n      }\n\n      // Toggle checked state\n      if (active) {\n        if (node[_type] !== _radio) {\n          off(input, state);\n        }\n      } else {\n        on(input, state);\n      }\n    }\n  }\n\n  // Add checked, disabled or indeterminate state\n  function on(input, state, keep) {\n    var node = input[0],\n      parent = input.parent(),\n      checked = state == _checked,\n      indeterminate = state == _indeterminate,\n      disabled = state == _disabled,\n      callback = indeterminate ? _determinate : checked ? _unchecked : 'enabled',\n      regular = option(input, callback + capitalize(node[_type])),\n      specific = option(input, state + capitalize(node[_type]));\n\n    // Prevent unnecessary actions\n    if (node[state] !== true) {\n\n      // Toggle assigned radio buttons\n      if (!keep && state == _checked && node[_type] == _radio && node.name) {\n        var form = input.closest('form'),\n          inputs = 'input[name=\"' + node.name + '\"]';\n\n        inputs = form.length ? form.find(inputs) : $(inputs);\n\n        inputs.each(function() {\n          if (this !== node && $(this).data(_iCheck)) {\n            off($(this), state);\n          }\n        });\n      }\n\n      // Indeterminate state\n      if (indeterminate) {\n\n        // Add indeterminate state\n        node[state] = true;\n\n        // Remove checked state\n        if (node[_checked]) {\n          off(input, _checked, 'force');\n        }\n\n      // Checked or disabled state\n      } else {\n\n        // Add checked or disabled state\n        if (!keep) {\n          node[state] = true;\n        }\n\n        // Remove indeterminate state\n        if (checked && node[_indeterminate]) {\n          off(input, _indeterminate, false);\n        }\n      }\n\n      // Trigger callbacks\n      callbacks(input, checked, state, keep);\n    }\n\n    // Add proper cursor\n    if (node[_disabled] && !!option(input, _cursor, true)) {\n      parent.find('.' + _iCheckHelper).css(_cursor, 'default');\n    }\n\n    // Add state class\n    parent[_add](specific || option(input, state) || '');\n\n    // Set ARIA attribute\n    if (!!parent.attr('role') && !indeterminate) {\n      parent.attr('aria-' + (disabled ? _disabled : _checked), 'true');\n    }\n\n    // Remove regular state class\n    parent[_remove](regular || option(input, callback) || '');\n  }\n\n  // Remove checked, disabled or indeterminate state\n  function off(input, state, keep) {\n    var node = input[0],\n      parent = input.parent(),\n      checked = state == _checked,\n      indeterminate = state == _indeterminate,\n      disabled = state == _disabled,\n      callback = indeterminate ? _determinate : checked ? _unchecked : 'enabled',\n      regular = option(input, callback + capitalize(node[_type])),\n      specific = option(input, state + capitalize(node[_type]));\n\n    // Prevent unnecessary actions\n    if (node[state] !== false) {\n\n      // Toggle state\n      if (indeterminate || !keep || keep == 'force') {\n        node[state] = false;\n      }\n\n      // Trigger callbacks\n      callbacks(input, checked, callback, keep);\n    }\n\n    // Add proper cursor\n    if (!node[_disabled] && !!option(input, _cursor, true)) {\n      parent.find('.' + _iCheckHelper).css(_cursor, 'pointer');\n    }\n\n    // Remove state class\n    parent[_remove](specific || option(input, state) || '');\n\n    // Set ARIA attribute\n    if (!!parent.attr('role') && !indeterminate) {\n      parent.attr('aria-' + (disabled ? _disabled : _checked), 'false');\n    }\n\n    // Add regular state class\n    parent[_add](regular || option(input, callback) || '');\n  }\n\n  // Remove all traces\n  function tidy(input, callback) {\n    if (input.data(_iCheck)) {\n\n      // Remove everything except input\n      input.parent().html(input.attr('style', input.data(_iCheck).s || ''));\n\n      // Callback\n      if (callback) {\n        input[_callback](callback);\n      }\n\n      // Unbind events\n      input.off('.i').unwrap();\n      $(_label + '[for=\"' + input[0].id + '\"]').add(input.closest(_label)).off('.i');\n    }\n  }\n\n  // Get some option\n  function option(input, state, regular) {\n    if (input.data(_iCheck)) {\n      return input.data(_iCheck).o[state + (regular ? '' : 'Class')];\n    }\n  }\n\n  // Capitalize some string\n  function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  // Executable handlers\n  function callbacks(input, checked, callback, keep) {\n    if (!keep) {\n      if (checked) {\n        input[_callback]('ifToggled');\n      }\n\n      input[_callback]('ifChanged')[_callback]('if' + capitalize(callback));\n    }\n  }\n})(window.jQuery || window.Zepto);\n"]},"metadata":{},"sourceType":"module"}